import{randBetween as _}from"../node_modules/big-integer/BigInteger.js";var o=class{#t=[];constructor(){}addClass(t,s){for(let l=0;l<this.#t.length;l++){let m=this.#t[l];if(m.getName()===t&&m.getSerialBigInt()===s)return this.#t[l]}let e=new a({className:t,serial:s});return this.#t.push(e),e}getClass(t){let s=[];if(this.#t.map(e=>{t===e.getName()&&s.push(e)}),s.length>0)return s;throw new Error("Class Not Found")}getAllClasses(){return this.#t}},r=new o;function n(i){let t=i?.min||"-1e100",s=i?.max||"1e100";return BigInt(_(t.toString(),s.toString()).toString())}var c,u=n();function C(){return c}var a=class{#t=this.constructor.name;#s=C;#i="";#e;constructor({className:t,serial:s}){this.#e=s,this.#i=t}getClass(){return this.#s()}getName(){return this.#i}getSerialBigInt(){return this.#e}isEquals(t){return this.getName()===t.getName()&&this.getSerialBigInt()===t.getSerialBigInt()}};c=r.addClass("JSClass",u);var S=n(),g=class{#t=this.constructor.name;#s;#i;constructor(t=S){this.#s=t??S,this.#i=r.addClass(this.#t,this.#s)}set serial(t){this.#s=t}getClass(){return this.#i}toString(){return`class ${this.getClass().getName()}`}};export{a as JSClass,g as JSObject,r as JSSystem,n as Random_Serial_BigInt};
